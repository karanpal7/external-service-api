version: '3.8'

# Development Docker Compose - Only Database and Infrastructure
# Use this for local development when running the Node.js service locally

services:
  # PostgreSQL Database for logging and application data
  postgres:
    image: postgres:15-alpine
    container_name: fireblocks-postgres-dev
    environment:
      - POSTGRES_DB=fireblocks_logs
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
    networks:
      - fireblocks-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: fireblocks-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - fireblocks-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fireblocks-pgadmin-dev
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@fireblocks.local
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
      - ./database/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - fireblocks-dev-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local

networks:
  fireblocks-dev-network:
    driver: bridge
